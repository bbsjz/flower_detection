{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Header from \"@/components/Header\";\nimport MainPage from '@/components/MainPage.vue';\nimport LoadView from \"@/components/LoadView.vue\";\nimport { postImage } from \"@/apis\";\nimport { useRouter } from 'vue-router';\nimport { ref } from \"vue\";\nimport { Notification } from \"@arco-design/web-vue\";\nconst __default__ = {\n  name: 'HomeVue'\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const displayType = ref(1);\n    const plants = ref([{\n      order: 1,\n      url: 'flowers1.jpg'\n    }, {\n      order: 2,\n      url: 'flowers2.jpg'\n    }, {\n      order: 3,\n      url: 'flowers3.jpg'\n    }, {\n      order: 4,\n      url: 'flowers4.jpg'\n    }, {\n      order: 5,\n      url: 'flowers5.jpg'\n    }, {\n      order: 6,\n      url: 'flowers6.jpg'\n    }]);\n    // 上传图片，预测返回多个结果\n    const searchByPic = picFile => {\n      let reader = new FileReader();\n      reader.readAsDataURL(picFile);\n      reader.onloadend = () => {\n        displayType.value = 0;\n        postImage('api/image/search', picFile).then(value => {\n          if (value.status == 200) {\n            let params = {\n              message: value.data[\"message\"],\n              possibility: value.data[\"possibility\"],\n              img: reader.result\n            };\n            router.push({\n              name: 'predict',\n              state: {\n                params\n              }\n            });\n          } else {\n            displayType.value = 1;\n            handleNotification();\n          }\n        });\n      };\n    };\n    //根据关键词搜索唯一结果\n    const searchByKeyWords = key_words => {\n      // 根据子组件传回植物名字搜索\n      displayType.value = 0;\n      router.push({\n        name: \"key-search\",\n        query: {\n          query: key_words\n        }\n      });\n    };\n    const search_in_carousel = msg => {\n      // 根据序号读取轮播图数据数组中的信息并转给详细信息网页\n      router.push({\n        name: 'plant'\n      });\n    };\n    const handleNotification = () => {\n      Notification.warning({\n        title: '错误提示',\n        content: '未识别到结果，请确认图片格式再次输入!',\n        closable: true,\n        duration: 6000,\n        style: {\n          width: '500px'\n        }\n      });\n    };\n    const __returned__ = {\n      router,\n      displayType,\n      plants,\n      searchByPic,\n      searchByKeyWords,\n      search_in_carousel,\n      handleNotification,\n      get Header() {\n        return Header;\n      },\n      MainPage,\n      LoadView,\n      get postImage() {\n        return postImage;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      ref,\n      get Notification() {\n        return Notification;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n});","map":{"version":3,"names":["Header","MainPage","LoadView","postImage","useRouter","ref","Notification","__default__","name","router","displayType","plants","order","url","searchByPic","picFile","reader","FileReader","readAsDataURL","onloadend","value","then","status","params","message","data","possibility","img","result","push","state","handleNotification","searchByKeyWords","key_words","query","search_in_carousel","msg","warning","title","content","closable","duration","style","width"],"sources":["D:/大软/GiantIsopod-Front-main/web/src/views/Home.vue"],"sourcesContent":["<template >\n    <div style=\"overflow-x: hidden\">\n        <div id=\"home\">\n            <Header />\n            <MainPage @postSearchRequest=\"searchByPic\" @postKeyWord=\"searchByKeyWords\" @postOrder=\"search_in_carousel\"\n                :images=\"plants\" v-show=\"displayType == 1\" />\n            <LoadView v-show=\"displayType == 0\"></LoadView>\n        </div>\n        <div id=\"intro\">\n            <p id=\"title\">\n                简 介\n            </p>\n            <p class=\"details\">\n                植物宝典是武汉大学学生自主研发的专业花朵识别信息数据库，收录了102种常见现生生物物种。此网站包括植物的权威名称、分类地位、形态特征、分布、功用、理论知识等内容，每一种植物均配有多张彩色照片。\n            </p>\n            <p class=\"details\">\n                本网站支持以图搜图和文字搜索功能。我们使用先进的机器学习（Mechine Learning）方法训练我们的深度卷积神经网络。根据测试，对于超过80%的情况，我们都可以给出正确的结果。\n            </p>\n            <p class=\"details\">\n                植物宝典可供植物学、农林、医药、海洋、生态、检验检疫等科研人员、教师和学生查询和学习，也可供普通大众全面学习中国植物科学知识使用。\n            </p>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'HomeVue',\n}\n</script>\n\n<script setup>\nimport Header from \"@/components/Header\";\nimport MainPage from '@/components/MainPage.vue';\nimport LoadView from \"@/components/LoadView.vue\";\nimport { postImage } from \"@/apis\";\nimport { useRouter } from 'vue-router';\nimport { ref } from \"vue\";\nimport { Notification } from \"@arco-design/web-vue\";\n\nconst router = useRouter();\nconst displayType = ref(1)\nconst plants = ref([\n    { order: 1, url: 'flowers1.jpg' },\n    { order: 2, url: 'flowers2.jpg' },\n    { order: 3, url: 'flowers3.jpg' },\n    { order: 4, url: 'flowers4.jpg' },\n    { order: 5, url: 'flowers5.jpg' },\n    { order: 6, url: 'flowers6.jpg' }])\n// 上传图片，预测返回多个结果\nconst searchByPic = (picFile) => {\n    let reader = new FileReader();\n    reader.readAsDataURL(picFile)\n    reader.onloadend = () => {\n        displayType.value = 0;\n        postImage('api/image/search', picFile).then((value) => {\n            if (value.status == 200) {\n                let params = { message: value.data[\"message\"], possibility: value.data[\"possibility\"], img: reader.result }\n                router.push({ name: 'predict', state: { params } })\n            } else {\n                displayType.value = 1;\n                handleNotification();\n            }\n        })\n    }\n}\n//根据关键词搜索唯一结果\nconst searchByKeyWords = (key_words) => {\n    // 根据子组件传回植物名字搜索\n    displayType.value = 0;\n    router.push({ name: \"key-search\", query: { query: key_words } })\n\n}\n\nconst search_in_carousel = (msg) => {\n    // 根据序号读取轮播图数据数组中的信息并转给详细信息网页\n    router.push({ name: 'plant' })\n}\n\nconst handleNotification = () => {\n    Notification.warning({\n        title: '错误提示',\n        content: '未识别到结果，请确认图片格式再次输入!',\n        closable: true,\n        duration: 6000,\n        style: { width: '500px' }\n    })\n}\n</script>\n\n<style>\n#home {\n    width: 100vw;\n    height: 100vh;\n    overflow: hidden;\n    background-image: url(\"../assets/bg1.jpg\");\n    background-repeat: no-repeat;\n    background-size: cover;\n}\n\n#intro {\n    width: 100vw;\n    height: 38vh;\n    background: url(\"../assets/introBg.png\");\n}\n\n#title {\n    font-size: 60px;\n    margin-left: 60px;\n    margin-bottom: -20px;\n    font-weight: 600;\n    color: cadetblue;\n}\n\n.details {\n    font-size: 25px;\n    line-height: 1.5;\n    letter-spacing: 2px;\n    padding: 30px;\n    color: darkcyan;\n    margin-bottom: -60px;\n}\n</style>\n"],"mappings":";AAgCA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,GAAG,QAAQ,KAAK;AACzB,SAASC,YAAY,QAAQ,sBAAsB;AAZnD,MAAAC,WAAA,GAAe;EACXC,IAAI,EAAE;AACV,CAAC;;;;;;IAYD,MAAMC,MAAM,GAAGL,SAAS,CAAC,CAAC;IAC1B,MAAMM,WAAW,GAAGL,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMM,MAAM,GAAGN,GAAG,CAAC,CACf;MAAEO,KAAK,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAe,CAAC,EACjC;MAAED,KAAK,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAe,CAAC,EACjC;MAAED,KAAK,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAe,CAAC,EACjC;MAAED,KAAK,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAe,CAAC,EACjC;MAAED,KAAK,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAe,CAAC,EACjC;MAAED,KAAK,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAe,CAAC,CAAC,CAAC;IACvC;IACA,MAAMC,WAAW,GAAIC,OAAO,IAAK;MAC7B,IAAIC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC7BD,MAAM,CAACE,aAAa,CAACH,OAAO,CAAC;MAC7BC,MAAM,CAACG,SAAS,GAAG,MAAM;QACrBT,WAAW,CAACU,KAAK,GAAG,CAAC;QACrBjB,SAAS,CAAC,kBAAkB,EAAEY,OAAO,CAAC,CAACM,IAAI,CAAED,KAAK,IAAK;UACnD,IAAIA,KAAK,CAACE,MAAM,IAAI,GAAG,EAAE;YACrB,IAAIC,MAAM,GAAG;cAAEC,OAAO,EAAEJ,KAAK,CAACK,IAAI,CAAC,SAAS,CAAC;cAAEC,WAAW,EAAEN,KAAK,CAACK,IAAI,CAAC,aAAa,CAAC;cAAEE,GAAG,EAAEX,MAAM,CAACY;YAAO,CAAC;YAC3GnB,MAAM,CAACoB,IAAI,CAAC;cAAErB,IAAI,EAAE,SAAS;cAAEsB,KAAK,EAAE;gBAAEP;cAAO;YAAE,CAAC,CAAC;UACvD,CAAC,MAAM;YACHb,WAAW,CAACU,KAAK,GAAG,CAAC;YACrBW,kBAAkB,CAAC,CAAC;UACxB;QACJ,CAAC,CAAC;MACN,CAAC;IACL,CAAC;IACD;IACA,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;MACpC;MACAvB,WAAW,CAACU,KAAK,GAAG,CAAC;MACrBX,MAAM,CAACoB,IAAI,CAAC;QAAErB,IAAI,EAAE,YAAY;QAAE0B,KAAK,EAAE;UAAEA,KAAK,EAAED;QAAU;MAAE,CAAC,CAAC;IAEpE,CAAC;IAED,MAAME,kBAAkB,GAAIC,GAAG,IAAK;MAChC;MACA3B,MAAM,CAACoB,IAAI,CAAC;QAAErB,IAAI,EAAE;MAAQ,CAAC,CAAC;IAClC,CAAC;IAED,MAAMuB,kBAAkB,GAAGA,CAAA,KAAM;MAC7BzB,YAAY,CAAC+B,OAAO,CAAC;QACjBC,KAAK,EAAE,MAAM;QACbC,OAAO,EAAE,qBAAqB;QAC9BC,QAAQ,EAAE,IAAI;QACdC,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ;MAC5B,CAAC,CAAC;IACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}