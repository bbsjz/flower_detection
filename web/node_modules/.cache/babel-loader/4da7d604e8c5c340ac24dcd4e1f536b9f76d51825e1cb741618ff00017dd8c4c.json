{"ast":null,"code":"import { createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7940ddd1\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"plantsCard\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode($setup[\"Header\"]), _createVNode($setup[\"Cards\"], {\n    plants: $setup.plants,\n    onPostSearchRequest: $setup.look_up_a_plant\n  }, null, 8 /* PROPS */, [\"plants\"])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createVNode","$setup","plants","onPostSearchRequest","look_up_a_plant"],"sources":["D:\\大软\\GiantIsopod-Front-main\\web\\src\\views\\PlantCard.vue"],"sourcesContent":["<template>\n    <div id=\"plantsCard\">\n        <Header />\n        <Cards :plants=\"plants\" @postSearchRequest=\"look_up_a_plant\" />\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"PlantCard\"\n}\n</script>\n<script setup>\nimport Header from \"@/components/Header\";\nimport Cards from \"@/components/Cards\";\nimport { getLabels } from \"@/apis\";\n\nimport { ref } from \"vue\";\n\nimport { useRouter } from 'vue-router'\nlet plants = ref()\n\nconst router = useRouter()\ngetLabels(\"api/image/labels\").then((response) => {\n    if (response.status === 200) {\n        plants.value = response.data[\"labels\"]\n    }\n    else {\n        console.log(\"err\", response)\n    }\n})\n\nconst look_up_a_plant = (msg) => {\n    let index = msg - 1;\n    let params = { name_zh: plants.value[index].name_zh, name_en: plants.value[index].name_en }\n    router.push({ name: 'plant', query: { id: msg }, state: { params } })\n}\n\n\n</script>\n<style scoped>\n#plantsCard {\n    width: 100vw;\n    height: 100vh;\n    overflow: hidden;\n    background-image: url(\"../assets/bg4.jpg\");\n    /*linear-gradient(*/\n    /*rgba(0, 0, 0, 0.9),*/\n    /*rgba(0, 0, 0, 0.9) 60%,*/\n    /*rgba(34, 34, 34, 0.1)*/\n    /*),*/\n    background-repeat: no-repeat;\n    background-size: 100%;\n}\n</style>\n"],"mappings":";;;EACSA,EAAE,EAAC;AAAY;;uBAApBC,mBAAA,CAGM,OAHNC,UAGM,GAFFC,YAAA,CAAUC,MAAA,aACVD,YAAA,CAA+DC,MAAA;IAAvDC,MAAM,EAAED,MAAA,CAAAC,MAAM;IAAGC,mBAAiB,EAAEF,MAAA,CAAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}