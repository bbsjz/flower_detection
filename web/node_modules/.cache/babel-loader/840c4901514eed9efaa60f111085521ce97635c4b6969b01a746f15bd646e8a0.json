{"ast":null,"code":"import { defineComponent, inject, createVNode, TransitionGroup, isVNode } from \"vue\";\nimport { configProviderInjectionKey } from \"../config-provider/context.js\";\nimport CascaderOption from \"./cascader-option.js\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport Empty from \"../empty/index.js\";\nimport Spin from \"../spin/index.js\";\nimport Scrollbar from \"../scrollbar/index.js\";\nfunction _isSlot(s) {\n  return typeof s === \"function\" || Object.prototype.toString.call(s) === \"[object Object]\" && !isVNode(s);\n}\nvar BaseCascaderPanel = defineComponent({\n  name: \"BaseCascaderPanel\",\n  props: {\n    displayColumns: {\n      type: Array,\n      required: true\n    },\n    selectedPath: {\n      type: Array,\n      required: true\n    },\n    activeKey: String,\n    totalLevel: {\n      type: Number,\n      required: true\n    },\n    multiple: Boolean,\n    checkStrictly: Boolean,\n    loading: Boolean,\n    dropdown: Boolean\n  },\n  setup(props, {\n    slots\n  }) {\n    const prefixCls = getPrefixCls(\"cascader\");\n    const configCtx = inject(configProviderInjectionKey, void 0);\n    const renderEmpty = () => {\n      var _a, _b, _c, _d, _e;\n      return (_e = (_d = (_a = slots.empty) == null ? void 0 : _a.call(slots)) != null ? _d : (_c = configCtx == null ? void 0 : (_b = configCtx.slots).empty) == null ? void 0 : _c.call(_b, {\n        component: \"cascader\"\n      })) != null ? _e : createVNode(Empty, null, null);\n    };\n    const renderColumn = (column, level = 0) => {\n      return createVNode(\"div\", {\n        \"class\": `${prefixCls}-panel-column`,\n        \"key\": `column-${level}`,\n        \"style\": {\n          zIndex: props.totalLevel - level\n        }\n      }, [createVNode(Scrollbar, {\n        \"class\": `${prefixCls}-column-content`\n      }, {\n        default: () => [column.length === 0 ? createVNode(\"div\", {\n          \"class\": `${prefixCls}-list-empty`\n        }, [renderEmpty()]) : createVNode(\"ul\", {\n          \"role\": \"menu\",\n          \"class\": [`${prefixCls}-list`, {\n            [`${prefixCls}-list-multiple`]: Boolean(props == null ? void 0 : props.multiple),\n            [`${prefixCls}-list-strictly`]: Boolean(props == null ? void 0 : props.checkStrictly)\n          }]\n        }, [column.map(item => {\n          return createVNode(CascaderOption, {\n            \"key\": item.key,\n            \"option\": item,\n            \"active\": props.selectedPath.includes(item.key) || item.key === props.activeKey,\n            \"multiple\": props.multiple,\n            \"checkStrictly\": props.checkStrictly\n          }, null);\n        })])]\n      })]);\n    };\n    const renderContent = () => {\n      if (props.loading) {\n        return createVNode(\"div\", {\n          \"key\": \"panel-column-loading\",\n          \"class\": [`${prefixCls}-panel-column`, `${prefixCls}-panel-column-loading`]\n        }, [createVNode(Spin, null, null)]);\n      }\n      if (props.displayColumns.length === 0) {\n        return createVNode(\"div\", {\n          \"key\": \"panel-column-empty\",\n          \"class\": `${prefixCls}-panel-column`\n        }, [createVNode(\"div\", {\n          \"class\": `${prefixCls}-list-empty`\n        }, [renderEmpty()])]);\n      }\n      return props.displayColumns.map((column, index) => renderColumn(column, index));\n    };\n    return () => {\n      let _slot;\n      return createVNode(TransitionGroup, {\n        \"tag\": \"div\",\n        \"name\": \"cascader-slide\",\n        \"class\": [`${prefixCls}-panel`, {\n          [`${prefixCls}-dropdown-panel`]: props.dropdown\n        }]\n      }, _isSlot(_slot = renderContent()) ? _slot : {\n        default: () => [_slot]\n      });\n    };\n  }\n});\nexport { BaseCascaderPanel as default };","map":{"version":3,"names":["defineComponent","inject","createVNode","TransitionGroup","isVNode","configProviderInjectionKey","CascaderOption","getPrefixCls","Empty","Spin","Scrollbar","_isSlot","s","Object","prototype","toString","call","BaseCascaderPanel","name","props","displayColumns","type","Array","required","selectedPath","activeKey","String","totalLevel","Number","multiple","Boolean","checkStrictly","loading","dropdown","setup","slots","prefixCls","configCtx","renderEmpty","_a","_b","_c","_d","_e","empty","component","renderColumn","column","level","zIndex","default","length","map","item","key","includes","renderContent","index","_slot"],"sources":["D:/大软/GiantIsopod-Front-main/web/node_modules/@arco-design/web-vue/es/cascader/base-cascader-panel.js"],"sourcesContent":["import { defineComponent, inject, createVNode, TransitionGroup, isVNode } from \"vue\";\nimport { configProviderInjectionKey } from \"../config-provider/context.js\";\nimport CascaderOption from \"./cascader-option.js\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport Empty from \"../empty/index.js\";\nimport Spin from \"../spin/index.js\";\nimport Scrollbar from \"../scrollbar/index.js\";\nfunction _isSlot(s) {\n  return typeof s === \"function\" || Object.prototype.toString.call(s) === \"[object Object]\" && !isVNode(s);\n}\nvar BaseCascaderPanel = defineComponent({\n  name: \"BaseCascaderPanel\",\n  props: {\n    displayColumns: {\n      type: Array,\n      required: true\n    },\n    selectedPath: {\n      type: Array,\n      required: true\n    },\n    activeKey: String,\n    totalLevel: {\n      type: Number,\n      required: true\n    },\n    multiple: Boolean,\n    checkStrictly: Boolean,\n    loading: Boolean,\n    dropdown: Boolean\n  },\n  setup(props, {\n    slots\n  }) {\n    const prefixCls = getPrefixCls(\"cascader\");\n    const configCtx = inject(configProviderInjectionKey, void 0);\n    const renderEmpty = () => {\n      var _a, _b, _c, _d, _e;\n      return (_e = (_d = (_a = slots.empty) == null ? void 0 : _a.call(slots)) != null ? _d : (_c = configCtx == null ? void 0 : (_b = configCtx.slots).empty) == null ? void 0 : _c.call(_b, {\n        component: \"cascader\"\n      })) != null ? _e : createVNode(Empty, null, null);\n    };\n    const renderColumn = (column, level = 0) => {\n      return createVNode(\"div\", {\n        \"class\": `${prefixCls}-panel-column`,\n        \"key\": `column-${level}`,\n        \"style\": {\n          zIndex: props.totalLevel - level\n        }\n      }, [createVNode(Scrollbar, {\n        \"class\": `${prefixCls}-column-content`\n      }, {\n        default: () => [column.length === 0 ? createVNode(\"div\", {\n          \"class\": `${prefixCls}-list-empty`\n        }, [renderEmpty()]) : createVNode(\"ul\", {\n          \"role\": \"menu\",\n          \"class\": [`${prefixCls}-list`, {\n            [`${prefixCls}-list-multiple`]: Boolean(props == null ? void 0 : props.multiple),\n            [`${prefixCls}-list-strictly`]: Boolean(props == null ? void 0 : props.checkStrictly)\n          }]\n        }, [column.map((item) => {\n          return createVNode(CascaderOption, {\n            \"key\": item.key,\n            \"option\": item,\n            \"active\": props.selectedPath.includes(item.key) || item.key === props.activeKey,\n            \"multiple\": props.multiple,\n            \"checkStrictly\": props.checkStrictly\n          }, null);\n        })])]\n      })]);\n    };\n    const renderContent = () => {\n      if (props.loading) {\n        return createVNode(\"div\", {\n          \"key\": \"panel-column-loading\",\n          \"class\": [`${prefixCls}-panel-column`, `${prefixCls}-panel-column-loading`]\n        }, [createVNode(Spin, null, null)]);\n      }\n      if (props.displayColumns.length === 0) {\n        return createVNode(\"div\", {\n          \"key\": \"panel-column-empty\",\n          \"class\": `${prefixCls}-panel-column`\n        }, [createVNode(\"div\", {\n          \"class\": `${prefixCls}-list-empty`\n        }, [renderEmpty()])]);\n      }\n      return props.displayColumns.map((column, index) => renderColumn(column, index));\n    };\n    return () => {\n      let _slot;\n      return createVNode(TransitionGroup, {\n        \"tag\": \"div\",\n        \"name\": \"cascader-slide\",\n        \"class\": [`${prefixCls}-panel`, {\n          [`${prefixCls}-dropdown-panel`]: props.dropdown\n        }]\n      }, _isSlot(_slot = renderContent()) ? _slot : {\n        default: () => [_slot]\n      });\n    };\n  }\n});\nexport { BaseCascaderPanel as default };\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,MAAM,EAAEC,WAAW,EAAEC,eAAe,EAAEC,OAAO,QAAQ,KAAK;AACpF,SAASC,0BAA0B,QAAQ,+BAA+B;AAC1E,OAAOC,cAAc,MAAM,sBAAsB;AACjD,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,SAASC,OAAOA,CAACC,CAAC,EAAE;EAClB,OAAO,OAAOA,CAAC,KAAK,UAAU,IAAIC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACJ,CAAC,CAAC,KAAK,iBAAiB,IAAI,CAACR,OAAO,CAACQ,CAAC,CAAC;AAC1G;AACA,IAAIK,iBAAiB,GAAGjB,eAAe,CAAC;EACtCkB,IAAI,EAAE,mBAAmB;EACzBC,KAAK,EAAE;IACLC,cAAc,EAAE;MACdC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ,CAAC;IACDC,YAAY,EAAE;MACZH,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ,CAAC;IACDE,SAAS,EAAEC,MAAM;IACjBC,UAAU,EAAE;MACVN,IAAI,EAAEO,MAAM;MACZL,QAAQ,EAAE;IACZ,CAAC;IACDM,QAAQ,EAAEC,OAAO;IACjBC,aAAa,EAAED,OAAO;IACtBE,OAAO,EAAEF,OAAO;IAChBG,QAAQ,EAAEH;EACZ,CAAC;EACDI,KAAKA,CAACf,KAAK,EAAE;IACXgB;EACF,CAAC,EAAE;IACD,MAAMC,SAAS,GAAG7B,YAAY,CAAC,UAAU,CAAC;IAC1C,MAAM8B,SAAS,GAAGpC,MAAM,CAACI,0BAA0B,EAAE,KAAK,CAAC,CAAC;IAC5D,MAAMiC,WAAW,GAAGA,CAAA,KAAM;MACxB,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;MACtB,OAAO,CAACA,EAAE,GAAG,CAACD,EAAE,GAAG,CAACH,EAAE,GAAGJ,KAAK,CAACS,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGL,EAAE,CAACvB,IAAI,CAACmB,KAAK,CAAC,KAAK,IAAI,GAAGO,EAAE,GAAG,CAACD,EAAE,GAAGJ,SAAS,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,CAACG,EAAE,GAAGH,SAAS,CAACF,KAAK,EAAES,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGH,EAAE,CAACzB,IAAI,CAACwB,EAAE,EAAE;QACtLK,SAAS,EAAE;MACb,CAAC,CAAC,KAAK,IAAI,GAAGF,EAAE,GAAGzC,WAAW,CAACM,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;IACnD,CAAC;IACD,MAAMsC,YAAY,GAAGA,CAACC,MAAM,EAAEC,KAAK,GAAG,CAAC,KAAK;MAC1C,OAAO9C,WAAW,CAAC,KAAK,EAAE;QACxB,OAAO,EAAG,GAAEkC,SAAU,eAAc;QACpC,KAAK,EAAG,UAASY,KAAM,EAAC;QACxB,OAAO,EAAE;UACPC,MAAM,EAAE9B,KAAK,CAACQ,UAAU,GAAGqB;QAC7B;MACF,CAAC,EAAE,CAAC9C,WAAW,CAACQ,SAAS,EAAE;QACzB,OAAO,EAAG,GAAE0B,SAAU;MACxB,CAAC,EAAE;QACDc,OAAO,EAAEA,CAAA,KAAM,CAACH,MAAM,CAACI,MAAM,KAAK,CAAC,GAAGjD,WAAW,CAAC,KAAK,EAAE;UACvD,OAAO,EAAG,GAAEkC,SAAU;QACxB,CAAC,EAAE,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC,GAAGpC,WAAW,CAAC,IAAI,EAAE;UACtC,MAAM,EAAE,MAAM;UACd,OAAO,EAAE,CAAE,GAAEkC,SAAU,OAAM,EAAE;YAC7B,CAAE,GAAEA,SAAU,gBAAe,GAAGN,OAAO,CAACX,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,KAAK,CAACU,QAAQ,CAAC;YAChF,CAAE,GAAEO,SAAU,gBAAe,GAAGN,OAAO,CAACX,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,KAAK,CAACY,aAAa;UACtF,CAAC;QACH,CAAC,EAAE,CAACgB,MAAM,CAACK,GAAG,CAAEC,IAAI,IAAK;UACvB,OAAOnD,WAAW,CAACI,cAAc,EAAE;YACjC,KAAK,EAAE+C,IAAI,CAACC,GAAG;YACf,QAAQ,EAAED,IAAI;YACd,QAAQ,EAAElC,KAAK,CAACK,YAAY,CAAC+B,QAAQ,CAACF,IAAI,CAACC,GAAG,CAAC,IAAID,IAAI,CAACC,GAAG,KAAKnC,KAAK,CAACM,SAAS;YAC/E,UAAU,EAAEN,KAAK,CAACU,QAAQ;YAC1B,eAAe,EAAEV,KAAK,CAACY;UACzB,CAAC,EAAE,IAAI,CAAC;QACV,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IACD,MAAMyB,aAAa,GAAGA,CAAA,KAAM;MAC1B,IAAIrC,KAAK,CAACa,OAAO,EAAE;QACjB,OAAO9B,WAAW,CAAC,KAAK,EAAE;UACxB,KAAK,EAAE,sBAAsB;UAC7B,OAAO,EAAE,CAAE,GAAEkC,SAAU,eAAc,EAAG,GAAEA,SAAU,uBAAsB;QAC5E,CAAC,EAAE,CAAClC,WAAW,CAACO,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;MACrC;MACA,IAAIU,KAAK,CAACC,cAAc,CAAC+B,MAAM,KAAK,CAAC,EAAE;QACrC,OAAOjD,WAAW,CAAC,KAAK,EAAE;UACxB,KAAK,EAAE,oBAAoB;UAC3B,OAAO,EAAG,GAAEkC,SAAU;QACxB,CAAC,EAAE,CAAClC,WAAW,CAAC,KAAK,EAAE;UACrB,OAAO,EAAG,GAAEkC,SAAU;QACxB,CAAC,EAAE,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvB;MACA,OAAOnB,KAAK,CAACC,cAAc,CAACgC,GAAG,CAAC,CAACL,MAAM,EAAEU,KAAK,KAAKX,YAAY,CAACC,MAAM,EAAEU,KAAK,CAAC,CAAC;IACjF,CAAC;IACD,OAAO,MAAM;MACX,IAAIC,KAAK;MACT,OAAOxD,WAAW,CAACC,eAAe,EAAE;QAClC,KAAK,EAAE,KAAK;QACZ,MAAM,EAAE,gBAAgB;QACxB,OAAO,EAAE,CAAE,GAAEiC,SAAU,QAAO,EAAE;UAC9B,CAAE,GAAEA,SAAU,iBAAgB,GAAGjB,KAAK,CAACc;QACzC,CAAC;MACH,CAAC,EAAEtB,OAAO,CAAC+C,KAAK,GAAGF,aAAa,CAAC,CAAC,CAAC,GAAGE,KAAK,GAAG;QAC5CR,OAAO,EAAEA,CAAA,KAAM,CAACQ,KAAK;MACvB,CAAC,CAAC;IACJ,CAAC;EACH;AACF,CAAC,CAAC;AACF,SAASzC,iBAAiB,IAAIiC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}